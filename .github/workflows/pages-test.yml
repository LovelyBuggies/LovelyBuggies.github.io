name: GitHub Pages (test)

on:
  push:
    branches: ["test", "main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Install Pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Convert LaTeX sources to Markdown (build-only)
        shell: bash
        run: |
          set -e
          convert() {
            local tex="$1"; local bib="$2"; local out="$3"; local rpath="$4"; local title="$5"
            mkdir -p "$(dirname "$out")"
            printf '%s\n' '---' "title: \"${title}\"" 'math: true' '---' '' '{{< katex />}}' '' > "$out"
            pandoc "$tex" \
              --from=latex --to=gfm+tex_math_dollars \
              --resource-path="$rpath" \
              --citeproc --bibliography="$bib" \
              --wrap=none >> "$out"
          }

          # PPO → RL
          if [ -f "archive/PPO/main.tex" ]; then
            convert "archive/PPO/main.tex" "archive/PPO/ref.bib" "notes-src/content/docs/rl/from-pg-2-ppo.md" "archive/PPO" "From PG 2 PPO"
          fi

          # Bellman → RL
          if [ -f "archive/Bellman/main.tex" ]; then
            convert "archive/Bellman/main.tex" "archive/Bellman/ref.bib" "notes-src/content/docs/rl/understanding-bellman.md" "archive/Bellman" "Understanding Bellman"
          fi

          # Dec-POMDP Intro → RL/MARL
          if [ -f "archive/Dec-POMDP Intro/main.tex" ]; then
            convert "archive/Dec-POMDP Intro/main.tex" "archive/Dec-POMDP Intro/ref.bib" "notes-src/content/docs/rl/marl/introduction-2-decpomdp.md" "archive/Dec-POMDP Intro" "Introduction 2 DecPOMDP"
          fi

          # Optimal Q-Value in Dec-POMDP → RL/MARL
          if [ -f "archive/Optimal Q-Value in Dec-POMDP/main.tex" ]; then
            convert "archive/Optimal Q-Value in Dec-POMDP/main.tex" "archive/Optimal Q-Value in Dec-POMDP/ref.bib" "notes-src/content/docs/rl/marl/optimal-q-value-functions-for-dec-pomdp.md" "archive/Optimal Q-Value in Dec-POMDP" "Optimal Q Value Functions for Dec POMDP"
          fi

          # LLM Reward → LLM
          if [ -f "archive/LLM Reward/main.tex" ]; then
            convert "archive/LLM Reward/main.tex" "archive/LLM Reward/ref.bib" "notes-src/content/docs/large-language-models/reward-modeling-llm.md" "archive/LLM Reward" "Reward Modeling LLM"
          fi

          # Diffusion → LLM
          if [ -f "archive/Diffusion/main.tex" ]; then
            convert "archive/Diffusion/main.tex" "archive/Diffusion/ref.bib" "notes-src/content/docs/large-language-models/intro-2-diffusion.md" "archive/Diffusion" "Intro 2 Diffusion"
          fi

      - name: Setup Hugo (latest, extended)
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Build Notes via Hugo
        run: hugo --source notes-src --minify

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact (entire site root)
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
